# Decentralized Multi-Agent Configuration

# Autonomous agent general settings
autonomous_agent:
  # LLM configuration to use
  llm_config: llm_config
  # Maximum history length
  max_chat_history: 10

# Agent personality settings - Based on CoELA's Alice/Bob design
agent_personalities:
  # Explorer - Alice
  explorer:
    personality: "curious, adventurous, careful, proactive communicator"
    skills: ["exploration", "discovery", "memory mapping", "information gathering"]
    communication_preference: "detailed description"
    collaboration_style: "leading"

  # Operator - Bob
  operator:
    personality: "cautious, precise, focused, good at execution"
    skills: ["object manipulation", "fine motor actions", "problem solving", "task execution"]
    communication_preference: "concise and efficient"
    collaboration_style: "supporting"

# Communication system settings
communication:
  # Message queue settings
  message_queue:
    max_size: 100
    timeout_seconds: 30

  # Broadcast settings
  broadcast:
    enabled: true
    max_recipients: 10

  # Message types
  message_types:
    - "info_sharing"      # Information sharing
    - "task_coordination" # Task coordination
    - "help_request"      # Help request
    - "status_update"     # Status update
    - "strategy_discussion" # Strategy discussion

# 历史记录格式配置
history:
  max_history_length: 10  # -1 表示不限制历史长度
  # 历史记录格式配置
  format:
    include_thought: true   # 是否在历史记录中包含Thought内容
    show_execution_status: true  # 是否显示执行状态

# Task execution settings
execution:
  max_total_steps: 300  # Maximum total execution steps
  max_steps_per_task: 20  # Maximum steps per subtask (每个任务的最大步数)

# Task evaluator settings (保持向后兼容)
task_evaluator:
  max_steps_per_task: 30  # Maximum steps per subtask (已废弃，请使用execution.max_steps_per_task)

# Evaluation mode settings
evaluation:
  # Evaluation type: 'sequential' (sequential evaluation) or 'combined' (combined evaluation) or 'independent' (independent evaluation)
  task_type: 'sequential'

  # Default scenario settings
  default_scenario: '00001'

  # Run settings
  run_settings:
    # Default run suffix
    default_suffix: 'demo'
    # Log level: 'DEBUG', 'INFO', 'WARNING', 'ERROR'
    log_level: 'INFO'

  # Task execution configuration
  execution:
    # Task timeout (seconds)
    timeout_seconds: 900

    # Sequential evaluation mode configuration
    sequential:
      # Whether to continue executing next task when subtask fails
      continue_on_failure: true

    # Combined evaluation mode configuration
    combined:
      # Separator between task descriptions
      task_separator: "\n\nNext task:\n"
      # Whether to add task numbers before task descriptions
      add_task_numbers: true

    # Independent evaluation mode configuration
    independent:
      # Whether to continue executing next task when subtask fails
      continue_on_failure: true

      # Delay time between subtasks (seconds) - for resource cleanup
      delay_between_subtasks: 1.0

      # Whether to show subtask execution progress
      show_subtask_progress: true

      # Output management configuration
      output_management:
        # Subtask output directory naming pattern
        subtask_dir_pattern: 'subtask_{index:03d}_{hash}'

        # Whether to save detailed logs for each subtask
        save_individual_logs: true

        # Whether to generate subtask-level trajectory files
        generate_subtask_trajectories: true



# 并行评测配置
parallel_evaluation:
  # 是否启用并行评测
  enabled: false

  # 场景级并行配置
  scenario_parallelism:
    # 最大并行场景数
    max_parallel_scenarios: 4

  # 场景选择配置
  # 说明：首先根据场景选择配置确定基础场景列表，然后应用任务筛选
  scenario_selection:
    # 场景选择模式
    # 选项:
    #   - 'all': 选择所有可用场景
    #   - 'range': 选择指定范围内的场景 (如 00001-00010)
    #   - 'list': 选择指定列表中的场景
    mode: 'range'

    # 范围模式配置 (当mode='range'时使用)
    range:
      start: '00001'  # 起始场景ID (5位数字，如 00001)
      end: '00010'    # 结束场景ID (5位数字，如 00010)

    # 列表模式配置 (当mode='list'时使用)
    # 用法：取消注释并指定场景ID列表
    # list: ['00001', '00003', '00005']

    # 任务筛选配置 (与场景选择取交集)
    # 说明：任务筛选用于根据任务特征进一步筛选要评测的场景
    # 只有包含符合筛选条件任务的场景才会被评测
    task_filter:
      # 任务类别筛选 (可选)
      # 说明：根据任务的task_category字段筛选任务
      # 支持的类别:
      #   - 'direct_command': 直接命令任务 (如"将苹果放到桌子上")
      #   - 'attribute_reasoning': 属性推理任务 (如"找到最重的物体")
      #   - 'tool_use': 工具使用任务 (如"用锤子修理设备")
      #   - 'spatial_reasoning': 空间推理任务 (如"将物体放到最近的容器中")
      #   - 'compound_reasoning': 复合推理任务
      #   - 'explicit_collaboration': 显式协作任务 (明确指定多智能体协作)
      #   - 'implicit_collaboration': 隐式协作任务 (需要智能体自主协作)
      #   - 'compound_collaboration': 复合协作任务
      # 用法：取消注释并指定要筛选的类别列表
      # categories: ['explicit_collaboration', 'implicit_collaboration']

      # 注意：由于当前数据集中所有场景都是双智能体设计，
      # 因此移除了agent_count筛选配置项

  # 输出配置
  output:
    # 是否保存各场景的详细轨迹
    save_individual_trajectories: true
    # 是否生成汇总报告
    generate_summary_report: true

  # 结果统计和输出配置
  output:
    # 是否保存详细的执行轨迹
    save_trajectory: true
    # 是否保存详细日志
    save_detailed_logs: true
    # 输出目录
    output_directory: 'output'
    # 是否生成评测报告
    generate_report: true

  # 调试配置
  debug:
    # 是否启用详细日志
    verbose_logging: true
    # 日志级别: 'DEBUG', 'INFO', 'WARNING', 'ERROR'
    log_level: 'INFO'
    # 是否在每步后暂停（用于调试）
    pause_between_steps: false
    # 暂停时间（秒）
    pause_duration: 1.0