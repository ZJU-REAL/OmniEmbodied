{
  "id": 1032,
  "raw": "\nRetrieved from http://sqa.stackexchange.com/questions/8057/role-of-quality-assurance-not-testing-in-agile\nText:\nTake the 2-minute tour ×\n\nFrom Wikipedia:\n\n\nYou can read the following thread to understand the difference between QA and testing (quality control): What's the difference between \"testing\" and \"quality assurance\"?\n\nWhat I'd like to understand is whether there is a place for QA engineer who is not a tester in Agile/Scrum. Agile is deliberately short on processes and documentation (its even in the manifesto), and that's what QA specialize in. So should there even be a QA engineer in Agile?\n\nI myself am not a QA engineer (I am a test lead), but I have a friend who is, so that's why I am asking.\n\nThank you.\n\nshare|improve this question\n\n5 Answers 5\n\nI will try to answer keeping in mind the job of a QA engineer is defined as \"Prevention of faults by inspecting & testing the process\" in the linked question.\n\nAgile/Scrum is not per definition short in processes. The team itself should set the process they need to deliver high quality deliverables in each iteration. Testing should be done during the cycle not after the Sprint is finished.\n\nThe \"Scrum Master\" is the one who facilitates this \"continuous improvement\" process during a Sprint retrospective. From my experience the retrospective leads to improving the (testing) process itself, depending on the need of the team.\n\nThe Scrum framework has set boundaries as what is minimal needed from the process, but you are free to add extra steps as they are needed. For example each team uses a different \"Definition of Done\" to describe their cycle needs.\n\nHaving someone in the team with a background in QA is a great plus, but remember a Agile/Scrum team wants each team member to be cross-functional. Thus if you want a pure QA job an Agile/Scrum team might not be the ideal location.\n\nshare|improve this answer\nNice answer! The teams I have been involved with haven't had a label, but in general the quality feedback comes from the discussions about the wider implications (such as dev or build practices) of defects identified during our weekly meetings. –  Jeff_Lucas Mar 23 at 17:40\n\nI do not see a role for a QA engineer who is not a tester with Agile/Scrum teams. I do see such a role in an organisation that uses Agile/Scrum. Many companies and projects require adherence to various standards and procedures plus documentary evidence that those standards and procedures are followed. The QA engineer can be the focus for those standards and procedures, making sure that the organisation keeps up to date with the standards and procedures and any changes to them; making sure the teams follow them; making sure that training is provided as necessary; making sure that the required documentation is generated and is valid.\n\nThere may be an overlap between the Scrum Master role and the QA role. Perhaps that should be seen as the normal communication route between the team members and QA.\n\nshare|improve this answer\nEven if the organization is not regulated by any government agency? –  user3251930 Mar 17 at 14:13\n@user3251930 There are lots of standards that are not controlled or mandated by governments. The automotive industry defined Misra C; the ISO 9000-series is about business practice. Many countries have legislation about health and safety and more within the working environment, so I doubt that there are many organizations that are not regulated by any government agency. –  AdrianHHH Mar 17 at 14:30\n\nIn my opinion is a question of definitions in your company/project. I personally could hardly imagine a test lead who is definitely NOT a QA Engineer, or QA Engineer who claims he is not a \"tester\".\n\nMy example - a development lead is mostly a software engineer and software engineer is mostly a programmer (it is not about how much they pay you if the title on your door is \"lead *\" vs \"programmer/tester\", it's about what are you doing while working.).\n\nIn Scrum the role (except PO, SM) - is \"worker\", sometimes with tester, programmer or designer flavor. And Scrum is about not caring about what title is on your business card :-).\n\nIf the question is about - should we do much of QA Documentation & Process Rules in Scrum - probably not, not much anyway, but as always - it depends :-).\n\nshare|improve this answer\n\nLike always, depends on the project. Agile is a fluid concept: how it is implemented varies. That said, if a QA engineer can find enough improvements apart from testing to cover his salary, then yes, there should be a QA engineer. Quite probably this QA engineer would bring the team expertise it does not have.\n\nshare|improve this answer\n\nWhile it is impossible to give an answer that will apply to every organization and project, this is a great question that has spurred some excellent discussion. The given answers and references give clear and concise definitions of titles. But trying to fit those into an Agile process just isn't going to work perfectly. I propose momentarily forgetting titles and typical job duties, and instead working backwards.\n\nFor maximum impact in an Agile Environment, QA must perform two roles:\n\n1. Test the Product\n\n  • Good QA finds and files defects, tests and closes tickets, performs a wide variety of testing ( exploratory, regression, integration, etc.), and probably writes automated test scripts.\n  • Great QA knows finding bugs is only half the battle, and works to ensure a great user experience (through usability testing, and deep analysis of whether the product is truly delivering what the users need).\n\n2. Improve the Process\n\n  • Good QA finds ways to improve their daily work - looking for bottlenecks and working to eliminate them.\n  • Great QA continuously finds ways to improve the QA process for the entire team. Sometimes this means trying different tools, or in many cases, creating your own.\n  • Exceptional QA has a continuous stream of brain power always running in the background, taking note of not just her own frustrations and blockers, but those of her teammates. She later reviews those moments, finds the pain points, and beings compiling possible solutions.\n  • Exceptional QA works with every department to make quality a priority for each employee, and finds ways to improve every step of the software development process.\n\nIt's no easy task to be able to test the product and improve the process in a fast-paced Agile Development. It requires discipline and strong time management and prioritization skills. The people who perform best in this position must be able to not only properly prioritize their own work, but need to monitor non-stop incoming information and infinite variables to recognize when priorities have shifted, and when teammates priorities are out of sync.\n\nNo matter what title you give the position, there should definitely be a QA presence in Agile Development that goes beyond just testing.\n\n  • Agile calls for lean processes - it's QA's job to find ways to eliminate unnecessary process and make it as efficient as possible.\n  • Agile calls for less time wasted on documentation - it's QA's job to determine which documentation is going to save time in the long run, and then figure out how to automate as much of it as possible.\nshare|improve this answer\n\nYour Answer\n\n\n\n",
  "response": "# **Agile Software Development Lab – A Multi-Agent Collaborative Scene**  \n\n## **1. Overall Scene Theme and Core Concept**  \nAn **Agile Software Development Lab** is a high-energy, collaboration-rich environment where a cross-functional team works in tight iterations to deliver software. The scene is a hybrid between a tech workspace and a creative war room, with multiple workstations, testing rigs, and collaborative zones.  \n\n**Why Multi-Agent?**  \n- **Heavy Equipment Transport:** Server racks, testing rigs, and whiteboards require multiple hands.  \n- **Complex Debugging & Testing:** Some tasks (e.g., hardware-software integration) demand simultaneous input.  \n- **Documentation & Process Optimization:** QA engineers, developers, and Scrum Masters must coordinate to streamline workflows.  \n\n---  \n\n## **2. Spatial Layout and Area Descriptions**  \n\n### **A. Main Development Floor (Open-Plan Workspace)**  \n- A large, L-shaped desk cluster with **four modular workstations**, each with dual monitors, mechanical keyboards, and ergonomic chairs.  \n- Walls are lined with **whiteboards** covered in sprint backlogs, flowcharts, and sticky notes.  \n- Overhead LED panels cast a **cool, bright light**, with a slight hum from the air conditioning.  \n\n### **B. QA Testing Zone**  \n- A **raised platform** with **three testing rigs**:  \n  - **Rig 1:** A **server rack** (1.8m tall, 80kg) with blinking status LEDs.  \n  - **Rig 2:** A **mobile device test stand** holding 12 smartphones in charging cradles.  \n  - **Rig 3:** A **manual testing station** with a **buggy prototype** (a robotic arm with erratic calibration).  \n- A **thermal printer** spits out test logs, piling up on the floor.  \n\n### **C. Scrum Meeting Area (The \"War Room\")**  \n- A **round table** (2m diameter, 50kg) with **10 mismatched chairs**.  \n- A **large touchscreen display** (wall-mounted, 85\") showing a **burn-down chart**.  \n- A **coffee station** with a **half-full pot** (cold), **stale pastries**, and a **stack of Agile Manifesto pamphlets**.  \n\n### **D. Documentation & Storage Nook**  \n- A **floor-to-ceiling shelving unit** (2.4m tall, 120kg) packed with:  \n  - **Three-ring binders** labeled \"ISO 9001 Compliance.\"  \n  - **A dusty trophy** (\"Best Sprint Velocity 2021\").  \n  - **A locked metal cabinet** (key missing) marked \"Incident Reports.\"  \n- A **wobbly printer table** with **jammed paper trays**.  \n\n---  \n\n## **3. Detailed Area-by-Area Inventory**  \n\n### **A. Main Development Floor**  \n\n#### **Anchor Furniture & Installations:**  \n- **L-Shaped Workstations** (x4): Adjustable-height desks with cable management trays.  \n- **Whiteboards** (x3): Covered in **erasable marker scribbles** and **half-peeled sticky notes**.  \n- **Server Rack** (in corner): **Blinking amber warning light** (disk failure).  \n\n#### **Key Interactive & Task-Relevant Objects:**  \n- **Bug-Tracking Monitor** (wall-mounted): Showing **17 open high-priority tickets**.  \n- **Ergonomic Keyboard (Logitech MX)**: **Missing the \"F5\" key** (critical for debugging).  \n- **External Hard Drive** (on desk): Labeled **\"Backup - DO NOT OVERWRITE.\"**  \n\n#### **Functional Ambient Objects:**  \n- **Wireless Headset** (charging, 15% battery).  \n- **Sticky Note Dispenser** (nearly empty, last few sheets curled at edges).  \n- **USB Hub** (overloaded, one port sparking intermittently).  \n\n#### **Background & Decorative Objects:**  \n- **\"Keep Calm and Code On\" poster** (faded, slightly crooked).  \n- **Half-dead succulent** (in a **Star Wars mug**).  \n- **Scattered LEGO pieces** (leftover from a team-building exercise).  \n\n---  \n\n### **B. QA Testing Zone**  \n\n#### **Anchor Furniture & Installations:**  \n- **Server Rack**: **Heavy, requires two people to move**.  \n- **Mobile Test Stand**: **Tilted at 15 degrees**, one phone dangling by its charging cable.  \n\n#### **Key Interactive & Task-Relevant Objects:**  \n- **\"Buggy Prototype\" Robotic Arm**: **Jammed in mid-motion**, error code **\"E102: Axis Overload.\"**  \n- **Thermal Printer**: **Out of paper**, error light blinking.  \n- **RFID Scanner** (on table): **Misaligned**, needs recalibration.  \n\n#### **Functional Ambient Objects:**  \n- **Toolbox** (open): Contains **precision screwdrivers, spare USB cables**.  \n- **Coffee Stain** (on test log printouts).  \n- **Dusty OSHA Compliance Poster** (partially obscured by a sticky note).  \n\n#### **Background & Decorative Objects:**  \n- **\"I ❤️ QA\" novelty mug** (chipped handle).  \n- **Outdated Android Dev Kit box** (repurposed as a footrest).  \n- **A single mismatched sock** (under the desk, origin unknown).  \n\n---  \n\n## **4. Scene Affordances and Embedded Potential**  \n\n### **Collaborative Transportation Affordances:**  \n- **Server Rack (80kg, 1.8m tall)** – Requires **two agents** to safely relocate.  \n- **Whiteboard (50kg, wall-mounted but detachable)** – Needs **one agent to hold while another adjusts screws**.  \n\n### **Reasoning & Tool-Use Affordances:**  \n#### **Attribute-Based Reasoning:**  \n- Among **five USB drives on the desk**, only **one** has:  \n  - **Red casing**  \n  - **\"CRITICAL PATCH\" label in Sharpie**  \n  - **Slightly bent connector**  \n- The **other four** are decoys (two black, one blue, one unlabeled).  \n\n#### **Compound (Tool-Use) Reasoning:**  \n- **Problem:** The **robotic arm is jammed (E102 error)**.  \n- **Solution:**  \n  - **Step 1:** Find the **calibration manual** (in the locked metal cabinet).  \n  - **Step 2:** Retrieve the **missing key** (buried under coffee-stained papers).  \n  - **Step 3:** Use the **precise torque wrench** (in toolbox) to reset the arm’s servos.  \n\n---  \n\n### **Final Notes on Scene Potential:**  \n- **Density ensures realism** (no \"empty\" spaces).  \n- **Every object has purpose**—whether functional, atmospheric, or a red herring.  \n- **Collaboration is mandatory** for certain tasks (heavy lifting, multi-step debugging).  \n- **Ambient noise forces precision** (e.g., finding the right USB among many).  \n\nThis **Agile Dev Lab** is a stage set for **complex, multi-agent problem-solving**—perfect for embodied AI simulations."
}